How did viewing a diff between two versions of a file help you see the bug that
was introduced?

- We can easily spot the differences without having to read the entire files.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

- We can track all the changes we have made and then revert back to older versions if we are not satisfied with the new ones.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros of manually choosing when to commit is each commit has an understanable and logical changes.
Cons is user may commit too few and make the differences between version intractable.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Git was developed for developers who need to maintain several related files together.

How can you use the commands git log and git diff to view the history of files?

- I can use git log to see each commit with its ID and description and then use git log to compare differences between versions

How might using version control make you more confident to make changes that
could break something?

- Because we can be able to revert back if we break anything.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
